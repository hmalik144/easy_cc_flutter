// Mocks generated by Mockito 5.3.2 from annotations
// in easy_cc_flutter/test/unit_test/viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:easy_cc_flutter/data/model/Currency.dart' as _i3;
import 'package:easy_cc_flutter/data/prefs/CurrencyPair.dart' as _i2;
import 'package:easy_cc_flutter/data/repository/RepositoryImpl.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCurrencyPair_0 extends _i1.SmartFake implements _i2.CurrencyPair {
  _FakeCurrencyPair_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCurrency_1 extends _i1.SmartFake implements _i3.Currency {
  _FakeCurrency_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryImpl extends _i1.Mock implements _i4.RepositoryImpl {
  MockRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CurrencyPair getConversionPair() => (super.noSuchMethod(
        Invocation.method(
          #getConversionPair,
          [],
        ),
        returnValue: _FakeCurrencyPair_0(
          this,
          Invocation.method(
            #getConversionPair,
            [],
          ),
        ),
      ) as _i2.CurrencyPair);
  @override
  _i5.Future<void> setConversionPair(
    String? fromCurrency,
    String? toCurrency,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConversionPair,
          [
            fromCurrency,
            toCurrency,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.Currency> getConversationRateFromApi(
    String? fromCurrency,
    String? toCurrency,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationRateFromApi,
          [
            fromCurrency,
            toCurrency,
          ],
        ),
        returnValue: _i5.Future<_i3.Currency>.value(_FakeCurrency_1(
          this,
          Invocation.method(
            #getConversationRateFromApi,
            [
              fromCurrency,
              toCurrency,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Currency>);
  @override
  _i5.Future<T> getDataFromApiCall<T>(
          _i5.Future<_i6.HttpResponse<T>>? apiCall) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDataFromApiCall,
          [apiCall],
        ),
        returnValue: _i5.Future<T>.value(null),
      ) as _i5.Future<T>);
}
